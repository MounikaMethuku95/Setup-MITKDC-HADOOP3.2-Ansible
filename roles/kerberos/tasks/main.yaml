# Kerberos role tasks

- name: Install Kerberos packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: 
  - krb5-server
  - krb5-server-ldap
  - krb5-libs
  - krb5-workstation
  - openldap-clients
  - python3-pexpect

# --- Ensure tmp exists ---
- name: Ensure kerberos templates directory exists (tmp)
  ansible.builtin.file:
    path: /tmp
    state: directory

# --- Kerberos LDAP container ---
- name: Render kerberos container LDIF
  ansible.builtin.copy:
    dest: /tmp/kerberos-container.ldif
    content: |
      dn: ou=Kerberos,{{ ldap_basedn }}
      objectClass: organizationalUnit
      ou: Kerberos

- name: Create Kerberos container in LDAP
  ansible.builtin.command: ldapadd -x -D "cn=Manager,{{ ldap_basedn }}" -w "{{ ldap_rootpw }}" -H ldap://localhost -f /tmp/kerberos-container.ldif
  register: add_container
  failed_when: add_container.rc != 0 and "Already exists" not in add_container.stderr

# --- Kerberos service account ---
- name: Render kerberos service account LDIF
  ansible.builtin.copy:
    dest: /tmp/kerberos-svc.ldif
    content: |
      dn: {{ krb_svc_dn }}
      objectClass: simpleSecurityObject
      objectClass: organizationalRole
      cn: krb-svc
      userPassword: {{ krb_svc_pw }}
      description: Kerberos LDAP service account

- name: Create Kerberos service account in LDAP
  ansible.builtin.command: ldapadd -x -D "cn=Manager,{{ ldap_basedn }}" -w "{{ ldap_rootpw }}" -H ldap://localhost -f /tmp/kerberos-svc.ldif
  register: add_svc
  failed_when: add_svc.rc != 0 and "Already exists" not in add_svc.stderr

# --- Service Keyfile ---
- name: Ensure Kerberos keyfile directory exists
  ansible.builtin.file:
    path: "{{ kerberos_db_dir }}"
    state: directory
    mode: '0700'

- name: Create service.keyfile (one-line format)
  ansible.builtin.copy:
    dest: "{{ kerberos_keyfile }}"
    content: "{{ krb_svc_dn }} {{ krb_svc_pw }}"
    mode: '0600'

- name: Verify service.keyfile contents
  ansible.builtin.command: cat {{ kerberos_keyfile }}
  register: keyfile_check

- name: print the message
  ansible.builtin.debug:
     msg: "Service keyfile contains: {{ keyfile_check.stdout }}"

# --- Config files ---
- name: Deploy kdc.conf
  ansible.builtin.template:
    src: kdc.conf.j2
    dest: "{{ kdc_conf_file }}"
    mode: '0644'

- name: Deploy kadm5.acl
  ansible.builtin.copy:
    dest: "{{ kadm5_acl_file }}"
    content: |
      */admin@{{ kerberos_realm }} *
    mode: '0644'

# --- Kerberos DB ---
- name: Check for Kerberos DB marker file
  ansible.builtin.stat:
    path: "{{ kerberos_db_dir }}/principal"
  register: krb_db_marker

- name: Create Kerberos database with LDAP backend (non-interactive)
  ansible.builtin.shell: |
    set -o pipefail
    echo -e "{{ ldap_rootpw }}\n{{ ldap_rootpw }}" | kdb5_util create -r {{ kerberos_realm }} -s
  args:
    executable: /bin/bash
  when: not krb_db_marker.stat.exists